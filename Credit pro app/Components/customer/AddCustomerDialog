import React, { useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { UserPlus } from "lucide-react";
import { format, addDays } from "date-fns";

export default function AddCustomerDialog({ open, onClose, onAdd }) {
  const [formData, setFormData] = useState({
    customer_name: '',
    phone_number: '',
    credit_amount: '',
    due_date: format(addDays(new Date(), 7), 'yyyy-MM-dd'),
    due_time: '10:00',
    notes: '',
    status: 'active'
  });

  const handleChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = () => {
    if (!formData.customer_name || !formData.phone_number || !formData.credit_amount) {
      alert('Please fill in all required fields');
      return;
    }
    onAdd(formData);
    setFormData({
      customer_name: '',
      phone_number: '',
      credit_amount: '',
      due_date: format(addDays(new Date(), 7), 'yyyy-MM-dd'),
      due_time: '10:00',
      notes: '',
      status: 'active'
    });
    onClose();
  };

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-lg max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <UserPlus className="w-5 h-5" />
            Add New Credit Customer
          </DialogTitle>
        </DialogHeader>
        
        <div className="space-y-4 py-4">
          <div className="space-y-2">
            <Label htmlFor="name">Customer Name *</Label>
            <Input
              id="name"
              value={formData.customer_name}
              onChange={(e) => handleChange('customer_name', e.target.value)}
              placeholder="Enter customer name"
              className="dark:bg-gray-800"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="phone">Phone Number *</Label>
            <Input
              id="phone"
              type="tel"
              value={formData.phone_number}
              onChange={(e) => handleChange('phone_number', e.target.value)}
              placeholder="+91 98765 43210"
              className="dark:bg-gray-800"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="amount">Credit Amount *</Label>
            <Input
              id="amount"
              type="number"
              value={formData.credit_amount}
              onChange={(e) => handleChange('credit_amount', parseFloat(e.target.value))}
              placeholder="Enter amount"
              className="dark:bg-gray-800"
            />
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div className="space-y-2">
              <Label htmlFor="date">Due Date</Label>
              <Input
                id="date"
                type="date"
                value={formData.due_date}
                onChange={(e) => handleChange('due_date', e.target.value)}
                className="dark:bg-gray-800"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="time">Reminder Time</Label>
              <Input
                id="time"
                type="time"
                value={formData.due_time}
                onChange={(e) => handleChange('due_time', e.target.value)}
                className="dark:bg-gray-800"
              />
            </div>
          </div>

          <div className="space-y-2">
            <Label htmlFor="notes">Notes (Optional)</Label>
            <Textarea
              id="notes"
              value={formData.notes}
              onChange={(e) => handleChange('notes', e.target.value)}
              placeholder="Add any additional notes..."
              className="dark:bg-gray-800 h-20"
            />
          </div>
        </div>

        <DialogFooter>
          <Button variant="outline" onClick={onClose}>
            Cancel
          </Button>
          <Button onClick={handleSubmit} className="bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700">
            Add Customer
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}